//******USER SETTINGS************

// Blinking Frequency (in Hz)
float freq = 10;

// Run Time of Experiment (in Seconds)
float runTime = 10;

//Duty Cycle (in percent)
float duty = 50;


//******Global Variables***************
int switchState = 0;
int red_light_pin_1 = 2;
int green_light_pin_1 = 0;
int blue_light_pin_1 = 1;
int red_light_pin_2 = 6;
int green_light_pin_2 = 4;
int blue_light_pin_2 = 5;
int red_light_pin_3 = 10;
int green_light_pin_3 = 8;
int blue_light_pin_3 = 9;
int waveState = 0;
unsigned long FREQ = (1 / freq) * 1000;
unsigned long flip = (duty / 100) * (1 / freq) * 1000;

void setup() {
  Serial.begin(250000);

  pinMode(red_light_pin_1, OUTPUT); pinMode(red_light_pin_2, OUTPUT); pinMode(red_light_pin_3, OUTPUT);
  pinMode(green_light_pin_1, OUTPUT); pinMode(green_light_pin_2, OUTPUT); pinMode(green_light_pin_3, OUTPUT);
  pinMode(blue_light_pin_1, OUTPUT); pinMode(blue_light_pin_2, OUTPUT); pinMode(blue_light_pin_3, OUTPUT);

  pinMode(7, OUTPUT); pinMode(3, OUTPUT); pinMode(11, OUTPUT); pinMode(13, INPUT);

}


void loop() {

  switchState = digitalRead(13);

  if (switchState == 0) {
    digitalWrite(7, LOW);
    digitalWrite(3, LOW);
    digitalWrite(11, LOW);
    RGB_color_1(0, 0, 0);
    RGB_color_2(0, 0, 0);
    RGB_color_3(0, 0, 0);
  }

  else {
    if ( millis() % FREQ < flip )
    {
      if (waveState == 0) {
        //Serial.print("off   ");
        Serial.println(millis());
       // Serial.print("on   ");
        Serial.println(millis());
      }
      digitalWrite(7, HIGH);
      digitalWrite(3, HIGH);
      digitalWrite(11, HIGH);
      RGB_color_1(0, 0, 255);
      RGB_color_2(0, 0, 255);
      RGB_color_3(0, 0, 255);
      waveState = 1;
    }
    else if ( (millis() % FREQ >= flip) && (millis() % FREQ < FREQ) )
    {
      if (waveState == 1) {
        //Serial.print("on   ");
        Serial.println(millis());
       // Serial.print("off   ");
        Serial.println(millis());
      }
      digitalWrite(7, LOW);
      digitalWrite(3, LOW);
      digitalWrite(11, LOW);
      RGB_color_1(0, 0, 0);
      RGB_color_2(0, 0, 0);
      RGB_color_3(0, 0, 0);
      waveState = 0;
    }
    else
    {
      //Serial.print("error   ");
      //Serial.println(millis());
    }

  }

  if (millis() > runTime * 1000) {
    digitalWrite(7, LOW);
    digitalWrite(3, LOW);
    digitalWrite(11, LOW);
    RGB_color_1(0, 0, 0);
    RGB_color_2(0, 0, 0);
    RGB_color_3(0, 0, 0);
    exit(0);
  }
}



// turn on internal RGB LED to set color, for color to wavelength conversation go to: https://academo.org/demos/wavelength-to-colour-relationship/
void RGB_color_1(int red_light_value_1, int green_light_value_1, int blue_light_value_1)   // Function to set RGB LED number 1 to correct color
{
  analogWrite(red_light_pin_1, red_light_value_1);
  analogWrite(green_light_pin_1, green_light_value_1);
  analogWrite(blue_light_pin_1, blue_light_value_1);
}

void RGB_color_2(int red_light_value_2, int green_light_value_2, int blue_light_value_2)  // Function to set RGB LED number 2 to correct color
{
  analogWrite(red_light_pin_2, red_light_value_2);
  analogWrite(green_light_pin_2, green_light_value_2);
  analogWrite(blue_light_pin_2, blue_light_value_2);
}

void RGB_color_3(int red_light_value_3, int green_light_value_3, int blue_light_value_3)  // Function to set RGB LED number 3 to correct color
{
  analogWrite(red_light_pin_3, red_light_value_3);
  analogWrite(green_light_pin_3, green_light_value_3);
  analogWrite(blue_light_pin_3, blue_light_value_3);
}
